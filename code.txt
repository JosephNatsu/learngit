#数据预处理
m=read.csv('D:\\R\\diabetes.csv')
X=m[,1:10]
Y=m[,11]
X=as.matrix(X)
for(i in 1:10){
  X[,i]=(X[,i]-mean(X[,i]))/sd(X[,i])
  M=t(X)%*%X
  X[,i]=X[,i]/sqrt(diag(M)[i])
}
Y=Y-mean(Y)##对X,Y进行标准化处理，使其二范数为一

#初始值确定
r0=Y
R=r0
beita0=numeric(10)
beita=beita0
S=1:10
sign1=which.max(abs(t(Y)%*%X)) ##激活集
Safter=S[-sign1]  
lamda0=t(r0)%*%X[,sign1]
lamda0=as.numeric(lamda0)
lamda=lamda0
Delta=numeric(10)

#迭代开始
for(i in 1:10){
  deltak=solve(t(X[,sign1])%*%X[,sign1])%*%t(X[,sign1])%*%r0/lamda0
  Delta[sign1]=deltak
  if(i>9){
    print(i)
    beita0=beita0+(lamda0)*Delta
    beita=cbind(beita,beita0)
  }
  print(lamda0)
  for(lamda1 in seq(lamda0,0,-0.1) ) {
    r1=r0-(lamda0-lamda1)*X%*%Delta
    if(abs(max(abs(t(r1)%*%X[,Safter]))-lamda1)<=0.05 )## 判断是否满足角度相等
    {l=which.max(abs(t(r1)%*%X[,Safter]))
    sign1=c(sign1,Safter[l])
    lamda=c(lamda,lamda1)
    R=cbind(R,r1)    
    beita1=beita0+(lamda0-lamda1)*Delta
    beita=cbind(beita,beita1)
    beita0=beita1
    r0=r1
    lamda0=lamda1
    Safter=S[-sign1]
    break}
  }
}

#绘图分析
proc=colSums(abs(beita))
proc=proc/proc[11]
xrange=c(0,1.1)
yrange=range(beita)
plot(xrange,yrange,type='n',xlab='|beita(i)|/max|beita|',ylab='coefficients')
abline(v=proc)
colors=rainbow(10)
linetype=1:10
for(i in 1:10){
  lines(proc,beita[i,],type='b',lwd=2.5,lty=linetype[i],col=colors[i])
}
title('迭代结果')
legend('right',inset=-0.02,paste('变量',1:10),cex=0.6,col=colors,lty=linetype,lwd=3)

#lars与lasso、forward.stagewise、stepwise求解路径对比ainstall.packages("lars")
mlas <- lars(X,Y,type="lasso")
mlar <- lars(X,Y,type="lar")
mfsw<- lars(X,Y,type="forward.stagewise") 
msw <- lars(X,Y,type="stepwise") 
par(mfrow=c(2,2))
plot(mlas)
plot(mlar)
plot(mfsw)
plot(msw)
